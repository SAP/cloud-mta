{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://example.com/mta.schema.json",
  "title": "com.sap.mta.mta-schema_3.1.8",
  "description": "MTA DESCRIPTOR SCHEMA",
  "$comment": "Based on https://github.wdf.sap.corp/mta/spec/blob/master/schemas/v3/v3.1/mta-schema.yaml",
  "type": "object",
  "required": [
    "_schema-version",
    "ID",
    "version"
  ],
  "properties": {
    "_schema-version": {
      "description": "The schema version that is being used for authoring a descriptor. The schema version should comply with the semantic versioning standard.",
      "type": "string"
    },
    "ID": {
      "description": "An application ID, that should be unique in the target runtime environment and may contain any number of unicode characters.",
      "type": "string",
      "pattern": "^[A-Za-z0-9_\\-\\.]+$"
    },
    "description": {
      "description": "A free text describing this application.",
      "type": "string"
    },
    "version": {
      "description": "The application version that should comply with the semantic versioning standard.",
      "type": "string",
      "pattern": "^(0|[1-9]\\d*)\\.(0|[1-9]\\d*)\\.(0|[1-9]\\d*)(-(0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*)(\\.(0|[1-9]\\d*|\\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\\+[0-9a-zA-Z-]+(\\.[0-9a-zA-Z-]+)*)?$"
    },
    "provider": {
      "description": "The provider or vendor of this application.",
      "type": "string"
    },
    "copyright": {
      "description": "A copyright statement from the provider.",
      "type": "string"
    },
    "modules": {
      "description": "A list of modules.",
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "name",
          "type"
        ],
        "properties": {
          "name": {
            "description": "The MTA module name which must be unique and cannot be the same as any provided property set or resource name.",
            "type": "string",
            "pattern": "^[A-Za-z0-9_\\-\\.]+$"
          },
          "type": {
            "description": "The module type that defines the design-time tools for the module.",
            "type": "string"
          },
          "description": {
            "description": "A free text describing this module.",
            "type": "string"
          },
          "path": {
            "description": "The path to a folder that contains the module artifacts.",
            "type": "string"
          },
          "properties": {
            "description": "A collection of key-value pairs that are available to the module at runtime.",
            "$ref": "#/definitions/properties"
          },
          "properties-metadata": {
            "$ref": "#/definitions/properties-metadata"
          },
          "parameters": {
            "description": "Configuration parameters that are used when deploying the module to the target runtime environment.",
            "$ref": "#/definitions/parameters"
          },
          "parameters-metadata": {
            "$ref": "#/definitions/parameters-metadata"
          },
          "build-parameters": {
            "description": "The build parameters define how the module is built by the corresponding tool.",
            "type": "object"
          },
          "includes": {
            "description": "It is possible to define the module parameters in external files. Use the \"includes\" keyword to point to those files.",
            "$ref": "#/definitions/includes"
          },
          "provides": {
            "description": "Used to define the named property sets that other modules and resources can require.",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "The name of the property set that the module provides. The provided name must be unique and cannot be the same as any resource or module name.",
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_\\-\\.]+$"
                },
                "public": {
                  "description": "Configures the accessibility of the provided property set; if set to "true", it is publically accessible and can be consumed by other MTA projects.",
                  "type": "boolean",
                  "default": false
                },
                "properties": {
                  "description": "A list of properties that are included in this property set.",
                  "$ref": "#/definitions/properties"
                },
                "properties-metadata": {
                  "$ref": "#/definitions/properties-metadata"
                }
              }
            }
          },
          "requires": {
            "description": "A list of property sets provided by other modules and/or resources (providers) that this module requires.",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "The name of a provided property set or resource (provider) that this module requires.",
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_\\-\\.]+$"
                },
                "group": {
                  "description": "A \"group\" can be used to combine properties from multiple providers into one runtime lookup object, such as an environment variable. As of schema version 2.1, this property is DEPRECATED.",
                  "type": "string"
                },
                "list": {
                  "description": "Defines a name for a runtime lookup object, such as an environment variable, if the required property set contains multiple values, for example, if used to consume configuration data from outside this MTA project.",
                  "type": "string"
                },
                "properties": {
                  "description": "Module properties whose values are determined by the provided properties. These properties can be referenced by the tilde notation: \"~{<provided-property-name>}\" ",
                  "$ref": "#/definitions/properties"
                },
                "parameters": {
                  "description": "Configuration parameters that are used when deploying the module to the target runtime environment.",
                  "$ref": "#/definitions/parameters"
                },
                "parameters-metadata": {
                  "$ref": "#/definitions/parameters-metadata"
                },
                "includes": {
                  "description": "It is possible to define the module parameters in external files. Use the \"includes\" keyword to point to those files.",
                  "$ref": "#/definitions/includes"
                }
              }
            }
          }
        }
      }
    },
    "resources": {
      "description": "A list of resources that are required by the modules of this MTA project.",
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "description": "The resource name which must be unique and cannot be the same as any provided property set or module name.",
            "type": "string",
            "pattern": "^[A-Za-z0-9_\\-\\.]+$"
          },
          "type": {
            "description": "A type of resource supported by deployment tools in the target environment.",
            "type": "string"
          },
          "description": {
            "description": "A free text describing this resource.",
            "type": "string"
          },
          "properties": {
            "description": "A collection of key-value pairs that can be required by modules and/or other resources as configuration data at runtime.",
            "$ref": "#/definitions/properties"
          },
          "properties-metadata": {
            "$ref": "#/definitions/properties-metadata"
          },
          "parameters": {
            "description": "Parameters can be used to influence the behavior of tools which interpret this descriptor. Parameters are not made available to requiring modules at runtime Untyped resources cannot have parameters.",
            "$ref": "#/definitions/parameters"
          },
          "parameters-metadata": {
            "$ref": "#/definitions/parameters-metadata"
          },
          "includes": {
            "description": "It is possible to define the module parameters in external files. Use the \"includes\" keyword to point to those files.",
            "$ref": "#/definitions/includes"
          },
          "optional": {
            "description": "A resource can be declared to be optional, if the MTA can compensate for its non-existence",
            "type": "boolean",
            "default": false
          },
          "active": {
            "description": "If a resource is declared to be active, it is allocated and bound according to declared requirements",
            "type": "boolean",
            "default": true
          },
          "requires": {
            "description": "list of names either matching a resource name or a name provided by another module within the same MTA",
            "type": "array",
            "items": {
              "type": "object",
              "required": [
                "name"
              ],
              "properties": {
                "name": {
                  "description": "an MTA internal name which must match either a provided name, or a resource name within the same MTA",
                  "type": "string",
                  "pattern": "^[A-Za-z0-9_\\-\\.]+$"
                },
                "properties": {
                  "$ref": "#/definitions/properties"
                },
                "properties-metadata": {
                  "$ref": "#/definitions/properties-metadata"
                },
                "parameters": {
                  "$ref": "#/definitions/parameters"
                },
                "parameters-metadata": {
                  "$ref": "#/definitions/parameters-metadata"
                },
                "includes": {
                  "description": "It is possible to define the module parameters in external files. Use the \"includes\" keyword to point to those files.",
                  "$ref": "#/definitions/includes"
                }
              }
            }
          }
        }
      }
    },
    "parameters": {
      "description": "Global parameters",
      "$ref": "#/definitions/parameters"
    },
    "parameters-metadata": {
      "$ref": "#/definitions/parameters-metadata"
    },
    "includes": {
      "description": "It is possible to define the module parameters in external files. Use the \"includes\" keyword to point to those files.",
      "$ref": "#/definitions/includes"
    }
  },
  "definitions": {
    "properties": {
      "type": "object"
    },
    "properties-metadata": {
      "type": "object",
      "properties": {
        "overwritable": {
          "type": "boolean",
          "default": true
        },
        "optional": {
          "type": "boolean",
          "default": false
        },
        "datatype": {
          "enum": [
            "str",
            "int",
            "float",
            "bool"
          ],
          "type": "string",
          "default": "str"
        }
      }
    },
    "parameters": {
      "type": "object"
    },
    "parameters-metadata": {
      "type": "object",
      "properties": {
        "overwritable": {
          "type": "boolean",
          "default": true
        },
        "optional": {
          "type": "boolean",
          "default": false
        }
      }
    },
    "includes": {
      "type": "array",
      "items": {
        "type": "object",
        "required": [
          "name",
          "path"
        ],
        "properties": {
          "name": {
            "description": "A name of an include section. This name will be used by a builder to generate a parameter section in the deployment descriptor",
            "type": "string"
          },
          "path": {
            "description": "A path pointing to a file which contains a map of parameters, either in JSON or in YAML format",
            "type": "string"
          }
        }
      }
    },
    "module": {
      "type": "object",
      "required": [
        "name",
        "type"
      ],
      "properties": {
        "name": {
          "description": "An MTA internal module name. Names need to be unique within the MTA scope",
          "type": "string",
          "pattern": "^[A-Za-z0-9_-]+$"
        },
        "type": {
          "description": "a globally unique type ID. Deployment tools will interpret this type ID",
          "type": "string"
        },
        "description": {
          "description": "a non-translatable description of this module. This is not a text for application users",
          "type": "string"
        },
        "path": {
          "description": " A (file) path which identifies the location of module artifacts. The path schema may depend on the tool which interprets this descriptor. Path may not be limited to a file system path",
          "type": "string"
        },
        "properties": {
          "description": "Properties shall be made available to the module at runtime. Provided property values can be accessed by \"~{<name-of-provides-section>/<provided-property-name>}\". Such expressions can be part of an arbitrary string",
          "$ref": "#/definitions/properties"
        },
        "properties-metadata": {
          "$ref": "#/definitions/properties-metadata"
        },
        "parameters": {
          "description": "Parameters can be used to steer the behavior of tools which interpret this descriptor. Parameters are not made available to the module at runtime",
          "$ref": "#/definitions/parameters"
        },
        "parameters-metadata": {
          "$ref": "#/definitions/parameters-metadata"
        },
        "build-parameters": {
          "description": "Build-parameters are specifically steering the behavior of build tools. Build-parameters ARE ONLY RELEVANT FOR DEVELOPMENT DESCRIPTORS (PRIO TO BUILD), NOT FOR DEPLOYMENT DESCRIPTORS! ",
          "type": "object"
        },
        "includes": {
          "description": "THE 'includes' ELEMENT IS ONLY RELEVANT FOR DEVELOPMENT DESCRIPTORS (PRIO TO BUILD), NOT FOR DEPLOYMENT DESCRIPTORS!",
          "$ref": "#/definitions/includes"
        },
        "provides": {
          "description": "List of provided names (MTA internal)to which properties (= configuration data) can be attached",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "an MTA internal name which can used by a requiring module",
                "type": "string",
                "pattern": "^[A-Za-z0-9_-]+$"
              },
              "public": {
                "description": "Indicates, that the provided properties shall be made publicly available by the deployer",
                "type": "boolean",
                "default": false
              },
              "properties": {
                "description": "property names and values make up the configuration data which is to be provided to requiring modules at runtime",
                "$ref": "#/definitions/properties"
              },
              "properties-metadata": {
                "$ref": "#/definitions/properties-metadata"
              }
            }
          }
        },
        "requires": {
          "description": "list of names either matching a resource name or a name provided by another module within the same MTA",
          "type": "array",
          "items": {
            "type": "object",
            "required": [
              "name"
            ],
            "properties": {
              "name": {
                "description": "an MTA internal name which must match either a provided name, a resource name, or a module name within the same MTA",
                "type": "string",
                "pattern": "^[A-Za-z0-9_-.]+$"
              },
              "group": {
                "description": " # A group name which shall be use by a deployer to group properties for lookup by a module runtime. The group name is used as the lookup name. DEPRECATED as of schema version 2.1",
                "type": "string"
              },
              "list": {
                "description": "All required and found configuration data sets will be assembled into a JSON array and provided to the module by the lookup name as specified by the value of 'list'.",
                "type": "string"
              },
              "properties": {
                "description": "Required properties can be mapped from provided properties. Provided property values can be accessed by \"~{<provided-property-name>}\". Such expressions can be part of an arbitrary string",
                "$ref": "#/definitions/properties"
              },
              "parameters": {
                "description": "Parameters can be used to influence the behavior of tools which interpret this descriptor. Parameters are not made available to the module at runtime. Provided property values can be accessed by \"~{<provided-property-name>}\". Such expressions can be part of an arbitrary string",
                "$ref": "#/definitions/parameters"
              },
              "parameters-metadata": {
                "$ref": "#/definitions/parameters-metadata"
              },
              "includes": {
                "description": "THE 'includes' ELEMENT IS ONLY RELEVANT FOR DEVELOPMENT DESCRIPTORS (PRIO TO BUILD), NOT FOR DEPLOYMENT DESCRIPTORS!",
                "$ref": "#/definitions/includes"
              }
            }
          }
        }
      }
    }
  }
}
